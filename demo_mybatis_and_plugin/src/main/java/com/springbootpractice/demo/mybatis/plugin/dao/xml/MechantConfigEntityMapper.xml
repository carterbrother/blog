<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springbootpractice.demo.mybatis.plugin.dao.mapper.MechantConfigEntityMapper">
  <resultMap id="BaseResultMap" type="com.springbootpractice.demo.mybatis.plugin.dao.entity.MechantConfigEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="app_id" jdbcType="CHAR" property="appId" />
    <result column="app_secret" jdbcType="CHAR" property="appSecret" />
    <result column="mechant_name" jdbcType="VARCHAR" property="mechantName" />
    <result column="cooperate_endtime" jdbcType="TIMESTAMP" property="cooperateEndtime" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, app_id, app_secret, mechant_name, cooperate_endtime, memo, created, updated, 
    deleted
  </sql>
  <select id="selectByExample" parameterType="com.springbootpractice.demo.mybatis.plugin.dao.example.MechantConfigEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mechant_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mechant_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mechant_config
    where id = #{id,jdbcType=INTEGER}
      and deleted = 
    <choose>
      <when test="andLogicalDeleted">
        1
      </when>
      <otherwise>
        0
      </otherwise>
    </choose>
  </select>
  <insert id="insert" parameterType="com.springbootpractice.demo.mybatis.plugin.dao.entity.MechantConfigEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mechant_config (app_id, app_secret, mechant_name, 
      cooperate_endtime, memo, created, 
      updated, deleted)
    values (#{appId,jdbcType=CHAR}, #{appSecret,jdbcType=CHAR}, #{mechantName,jdbcType=VARCHAR}, 
      #{cooperateEndtime,jdbcType=TIMESTAMP}, #{memo,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.springbootpractice.demo.mybatis.plugin.dao.entity.MechantConfigEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mechant_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        app_id,
      </if>
      <if test="appSecret != null">
        app_secret,
      </if>
      <if test="mechantName != null">
        mechant_name,
      </if>
      <if test="cooperateEndtime != null">
        cooperate_endtime,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        #{appId,jdbcType=CHAR},
      </if>
      <if test="appSecret != null">
        #{appSecret,jdbcType=CHAR},
      </if>
      <if test="mechantName != null">
        #{mechantName,jdbcType=VARCHAR},
      </if>
      <if test="cooperateEndtime != null">
        #{cooperateEndtime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springbootpractice.demo.mybatis.plugin.dao.example.MechantConfigEntityExample" resultType="java.lang.Long">
    select count(*) from mechant_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mechant_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=CHAR},
      </if>
      <if test="record.appSecret != null">
        app_secret = #{record.appSecret,jdbcType=CHAR},
      </if>
      <if test="record.mechantName != null">
        mechant_name = #{record.mechantName,jdbcType=VARCHAR},
      </if>
      <if test="record.cooperateEndtime != null">
        cooperate_endtime = #{record.cooperateEndtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mechant_config
    set id = #{record.id,jdbcType=INTEGER},
      app_id = #{record.appId,jdbcType=CHAR},
      app_secret = #{record.appSecret,jdbcType=CHAR},
      mechant_name = #{record.mechantName,jdbcType=VARCHAR},
      cooperate_endtime = #{record.cooperateEndtime,jdbcType=TIMESTAMP},
      memo = #{record.memo,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springbootpractice.demo.mybatis.plugin.dao.entity.MechantConfigEntity">
    update mechant_config
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=CHAR},
      </if>
      <if test="appSecret != null">
        app_secret = #{appSecret,jdbcType=CHAR},
      </if>
      <if test="mechantName != null">
        mechant_name = #{mechantName,jdbcType=VARCHAR},
      </if>
      <if test="cooperateEndtime != null">
        cooperate_endtime = #{cooperateEndtime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springbootpractice.demo.mybatis.plugin.dao.entity.MechantConfigEntity">
    update mechant_config
    set app_id = #{appId,jdbcType=CHAR},
      app_secret = #{appSecret,jdbcType=CHAR},
      mechant_name = #{mechantName,jdbcType=VARCHAR},
      cooperate_endtime = #{cooperateEndtime,jdbcType=TIMESTAMP},
      memo = #{memo,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="logicalDeleteByExample" parameterType="map">
    update mechant_config set deleted = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer">
    update mechant_config set deleted = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>